local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "ApollixV1", HidePremium = false, SaveConfig = true, ConfigFolder = "Glacierconf"})
local PlayerTab = Window:MakeTab({
	Name = "Player",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local Section = PlayerTab:AddSection({
	Name = "Player"
})

local function TeleportToPlayer(playerName)
    if playerName == "" then
        print("Please enter a player's name.")
        return
    end
    
    local player = game.Players:FindFirstChild(playerName)
    if player then
        local character = player.Character
        if character and character:IsA("Model") then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(rootPart.CFrame)
                print("Teleported to player: " .. playerName)
            else
                print("Player's position not available.")
            end
        else
            print("Player's character not found or invalid.")
        end
    else
        print("Player not found: " .. playerName)
    end
end

PlayerTab:AddTextbox({
    Name = "Teleport",
    Default = "Enter player's name",
    TextDisappear = true,
    Callback = function(playerName)
        TeleportToPlayer(playerName)
    end	  
})
local infjmp = false 

local function HandleJumpRequest()
    if infjmp then
        game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
    end
end

game:GetService("UserInputService").jumpRequest:Connect(HandleJumpRequest)
PlayerTab:AddToggle({
    Name = "Infinite Jump",
    Default = false,
    Callback = function(Value)
        infjmp = Value  
        if infjmp then
            print("Infinite jump enabled")
        else
            print("Infinite jump disabled")
        end
    end    
})
local DESTRUCTION_TIME = 5  
local PART_SIZE = Vector3.new(3, 0.2, 3) 
local createPartEnabled = false  
local function onKeyPress(input)
    if createPartEnabled and input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.E then
        local character = game.Players.LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                local playerPosition = humanoid.RootPart.Position
                local spawnPosition = playerPosition - Vector3.new(0, 3, 0)  
                local part = Instance.new("Part")
                part.Size = PART_SIZE 
                part.Position = spawnPosition
                part.Anchored = true  
                part.Parent = game.Workspace
                spawn(function()
                    wait(DESTRUCTION_TIME)
                    if part.Parent then  
                        part:Destroy()
                    end
                end)
            end
        end
    end
end


game:GetService("UserInputService").InputBegan:Connect(onKeyPress)


PlayerTab:AddToggle({
    Name = "Platforms[E]",
    Default = false,
    Callback = function(Value)
        createPartEnabled = Value  
        if createPartEnabled then
            print("Enabled")
        else
            print("disabled")
        end
    end    
})
local player = game.Players.LocalPlayer
local character = nil
local humanoid = nil
local rootPart = nil
local launchEnabled = false  
local function InitializeCharacter()
    character = player.Character or player.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
end


local function launchTowards(targetPosition)
    local direction = (targetPosition - rootPart.Position).unit
    local launchSpeed = 500
    local launchVelocity = direction * launchSpeed
    rootPart.Velocity = launchVelocity
end


InitializeCharacter()


game:GetService("UserInputService").InputBegan:Connect(function(input)
    if launchEnabled and input.UserInputType == Enum.UserInputType.MouseButton1 then
        local mouseHit = game.Players.LocalPlayer:GetMouse()
        local targetPosition = mouseHit.Hit.p
        launchTowards(targetPosition)
    end
end)


PlayerTab:AddToggle({
    Name = "ClickFly",
    Default = false,
    Callback = function(Value)
        launchEnabled = Value  
        if launchEnabled then
            print("Fly On")
        else
            print("Fly off")
        end
    end    
})
local player = game.Players.LocalPlayer
local character = nil
local humanoid = nil
local moveEnabled = false  


local function InitializeCharacter()
    character = player.Character or player.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid")
end


local function moveToPosition(targetPosition)
    local direction = (targetPosition - character.HumanoidRootPart.Position).unit
    local distance = (targetPosition - character.HumanoidRootPart.Position).magnitude

    humanoid:MoveTo(targetPosition)

    while moveEnabled and distance > 1 do
        direction = (targetPosition - character.HumanoidRootPart.Position).unit
        distance = (targetPosition - character.HumanoidRootPart.Position).magnitude

        humanoid.MoveDirection = direction
        humanoid.MoveTo = true

        game:GetService("RunService").Stepped:wait()
    end

    humanoid.MoveDirection = Vector3.new(0, 0, 0)
end


InitializeCharacter()


game:GetService("UserInputService").InputBegan:Connect(function(input)
    if moveEnabled and input.UserInputType == Enum.UserInputType.MouseButton1 then
        local mouseHit = game.Players.LocalPlayer:GetMouse()
        local targetPosition = mouseHit.Hit.p
        moveToPosition(targetPosition)
    end
end)


PlayerTab:AddToggle({
    Name = "2006 Movement",
    Default = false,
    Callback = function(Value)
        moveEnabled = Value  
        if moveEnabled then
            print("Movement enabled")
        else
            print("Movement disabled")
            humanoid:MoveTo(Vector3.new(0, -1000, 0))  
        end
    end    
})
local player = game.Players.LocalPlayer
local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")


local defaultWalkSpeed = 16
local defaultJumpPower = 50


local function updateCharacterAbilities(enabled)
    if humanoid then
        if enabled then
            humanoid.WalkSpeed = 200  
            humanoid.JumpPower = 150  
            print("Abilities boosted!")
        else
            humanoid.WalkSpeed = defaultWalkSpeed  
            humanoid.JumpPower = defaultJumpPower  
            print("Abilities reset to default.")
        end
    end
end


PlayerTab:AddToggle({
    Name = "SuperHuman",
    Default = false,
    Callback = function(Value)
        updateCharacterAbilities(Value)  
    end    
})
PlayerTab:AddSlider({
	Name = "Speed",
	Min = 16,
	Max = 200,
	Default = 16,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Speed",
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
	end    
})
PlayerTab:AddSlider({
	Name = "Jump Height",
	Min = 50,
	Max = 300,
	Default = 50,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Height",
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
	end    
})
local UserInputService = game:GetService("UserInputService")
local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

local flying = false
local speed = 160
local bodyVelocity
local bodyGyro

local function startFlying()
    if flying then
        return
    end

    flying = true
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
    bodyVelocity.Parent = HumanoidRootPart

    bodyGyro = Instance.new("BodyGyro")
    bodyGyro.CFrame = HumanoidRootPart.CFrame
    bodyGyro.MaxTorque = Vector3.new(4000, 4000, 4000)
    bodyGyro.Parent = HumanoidRootPart

   
    spawn(function()
        while flying do
            local direction = Vector3.new(0, 0, 0)
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                direction = direction + (workspace.CurrentCamera.CFrame.LookVector * speed)
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                direction = direction - (workspace.CurrentCamera.CFrame.LookVector * speed)
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                direction = direction - (workspace.CurrentCamera.CFrame.RightVector * speed)
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                direction = direction + (workspace.CurrentCamera.CFrame.RightVector * speed)
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                direction = direction + (Vector3.new(0, speed, 0))
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                direction = direction - (Vector3.new(0, speed, 0))
            end

            bodyVelocity.Velocity = direction
            bodyGyro.CFrame = workspace.CurrentCamera.CFrame
            wait()
        end
    end)
end

local function stopFlying()
    flying = false
    if bodyVelocity then
        bodyVelocity:Destroy()
    end
    if bodyGyro then
        bodyGyro:Destroy()
    end
end


local function toggleFlying(newValue)
    if newValue then
        startFlying()
    else
        stopFlying()
    end
end


local toggle = PlayerTab:AddToggle({
    Name = "Fly",
    Default = false,
    Callback = toggleFlying
})
PlayerTab:AddButton({
	Name = "Set Health 1000",
	Callback = function()
      		
local Players = game:GetService("Players")
local function setPlayerHealth(player)
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.Health = 1000
end

Players.PlayerAdded:Connect(function(player)
    setPlayerHealth(player)
end)

for _, player in ipairs(Players:GetPlayers()) do
    setPlayerHealth(player)
end

  	end    
})
PlayerTab:AddButton({
	Name = "Set Health default",
	Callback = function()
      		
local Players = game:GetService("Players")
local function setPlayerHealth(player)
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.Health = 100
end

Players.PlayerAdded:Connect(function(player)
    setPlayerHealth(player)
end)

for _, player in ipairs(Players:GetPlayers()) do
    setPlayerHealth(player)
end

  	end    
})
local ScripthubTab = Window:MakeTab({
	Name = "Scripthub",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
ScripthubTab:AddButton({
	Name = "Nut Hub",
	Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Qrto1/working/main/pc"))()
  	end    
})
ScripthubTab:AddButton({
	Name = "Yon Hub[Free vers, FF2]",
	Callback = function()
        loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/41968796deca8f470577e2b7e7c62489.lua"))()
  	end    
})
ScripthubTab:AddButton({
	Name = "Infinite Yeild[Admin]",
	Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
  	end    
})
ScripthubTab:AddButton({
	Name = "Prision life script",
	Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/SpecialXyt/Prison-Life-/main/OrekiHub"))();
  	end    
})
ScripthubTab:AddButton({
	Name = "Murder Mystery 2",
	Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/s-0-a-b/nexus/main/loadstring"))()
  	end    
})
ScripthubTab:AddButton({
	Name = "Chat BypassV1",
	Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/SkireScripts/Ouxie/main/Projects/simplebypass.lua"))()
  	end    
})
ScripthubTab:AddButton({
	Name = "Chat BypassV2",
	Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/SkireScripts/Ouxie/main/Projects/simplebypass.lua"))()
  	end    
})
ScripthubTab:AddButton({
	Name = "BladeBall/PitbullHub",
	Callback = function()   
loadstring(game:HttpGet("https://raw.githubusercontent.com/SoyAdriYT/PitbullHub-X/main/Loader.lua", true))()
  	end    
})
local GameTab = Window:MakeTab({
	Name = "Game",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local Section = GameTab:AddSection({
	Name = "Game"
})
GameTab:AddButton({
	Name = "Close Current Game",
	Callback = function()
        game:Shutdown()
  	end    
})
OrionLib:Init()
